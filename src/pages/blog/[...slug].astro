---
import { Image } from 'astro:assets'
import { getCollection, type CollectionEntry } from 'astro:content'

import {
  excludeDrafts,
  getPostsSerie
} from '@/lib/data/local/mdx-posts-functions'
import FormattedDate from '@/components/for-pages/blog/FormattedDate.astro'
import PostSeries from '@/components/for-pages/blog/PostSeries.astro'
import PostLayout from '@/layouts/PostLayout.astro'
import TableOfContents from '@/components/for-pages/blog/table-of-contents/TableOfContents.astro'
import { TOP_ID } from '@/components/for-pages/blog/table-of-contents/toc'
import ScrollToTop from '@/components/for-pages/blog/ScrollToTop.astro'

export async function getStaticPaths() {
  const posts = await getCollection('posts', excludeDrafts)
  return posts.map((post, index) => ({
    params: { slug: post.slug },
    props: { post, next: posts[index + 1], prev: posts[index - 1] }
  }))
}

interface Props {
  post: CollectionEntry<'posts'>
}

const { post } = Astro.props

// TOOD: related, tags
const {
  data: { image, title, date, serie }
} = post

const { Content, headings, remarkPluginFrontmatter } = await post.render()

const postsSerie = await getPostsSerie(serie?.title, title)
---

<PostLayout>
  <div>
    <h1 id={TOP_ID} class='text-2xl font-medium sm:text-3xl'>{title}</h1>

    <div class='flex mt-2 space-x-2 text-lg text-zinc-100/50'>
      {
        date && (
          <p class='text-sm text-muted-foreground'>
            Published on <FormattedDate date={date} />
          </p>
        )
      }
      <div class='text-zinc-100/30'>&middot;</div>
      <div>METRICS</div>
    </div>
  </div>

  <div class='sticky top-5 hidden h-0 xl:!col-start-4 xl:row-start-2 xl:block'>
    <div class='space-y-6'>
      {headings != null && <TableOfContents headings={headings} />}

      <div class='border-t border-zinc-200/10'></div>

      <div class='flex items-center justify-between'>
        {/* <LikeButton2 slug={post.slug} /> */}
        <ScrollToTop />
      </div>
    </div>
  </div>

  {
    postsSerie != null && postsSerie.posts.length > 1 && (
      <PostSeries data={postsSerie} isInteractive={true} />
    )
  }

  <div class='pt-10 pb-8 prose max-w-none dark:prose-invert'>
    <Content />
  </div>

  <div class='mt-16'>{/* <LikeButton2 slug={post.slug} /> */}</div>
  {
    postsSerie != null && postsSerie.posts.length > 1 ? (
      <div class='my-16'>
        <PostSeries data={postsSerie} />
      </div>
    ) : null
  }
  <!-- <Link
      href='/blog'
      class='absolute left-[-200px] top-14 hidden xl:inline-flex'
    >
      See all posts
    </Link>
    <div>
      {
        date && (
          <p class='text-sm text-muted-foreground'>
            Published on <FormattedDate date={date} />
          </p>
        )
      }
      <h1
        class='inline-block mt-2 text-4xl leading-tight font-heading lg:text-5xl'
      >
        {title}
      </h1>
    </div>
    {
      image && (
        <Image
          src={image}
          alt={title}
          width={720}
          height={405}
          class='my-8 transition-colors border rounded-md bg-muted'
        />
      )
    }

    {
      postsSerie != null && postsSerie.posts.length > 1 && (
        <PostSeries data={postsSerie} isInteractive={true} />
      )
    }
    <div class='pt-10 pb-8 prose max-w-none dark:prose-invert'>
      <Content />
    </div>
    <hr class='mt-12' />
    <div class='flex justify-center py-6 lg:py-10'>
      <Link href='/blog'>chevronLeft --- See all posts</Link>
    </div> -->
</PostLayout>
