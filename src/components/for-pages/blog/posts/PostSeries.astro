---
import { slug as slugger } from 'github-slugger'

import Link from '@/components/Link.astro'
import Icons from '@/components/icons/Icons.astro'
import type { PostSerie } from '@/content/post-serie.type'

interface Props {
  data: PostSerie
  isInteractive?: boolean | undefined
}

const { data, isInteractive } = Astro.props

const title = data.title
const currentPost = data.posts.find(post => post.isCurrent)
const length = data.posts.length
const currentIndex = currentPost!.order

const slug = slugger(title)
---

<div
  class='rounded-2xl border dark:border-none dark:bg-primary/5 p-5 shadow-surface-elevation-low lg:px-8 lg:py-7'
>
  <div toggle-card class='group flex w-full items-center text-left'>
    <div>
      <div class='text-sm uppercase text-foreground/50'>Series</div>
      <div class='text-lg font-medium sm:text-xl'>
        <Link href={`/blog/serie/${slug}`}>
          {title}
        </Link>
        <span class='text-sm font-normal text-foreground/50'>
          &middot; {currentIndex} of {length}</span
        >
      </div>
    </div>
    <div
      class:list={[
        'ml-auto pl-4',
        {
          hidden: !isInteractive
        }
      ]}
    >
      <div
        class='rounded-full bg-zinc-200 dark:bg-zinc-700 p-2 dark:group-hover:bg-zinc-100/25'
      >
        <Icons kind='chevronDown' class='hidden h-5 w-5' />
        <Icons kind='chevronUp' class='hidden h-5 w-5' />
      </div>
    </div>
  </div>

  <div card-content class='hidden'>
    <hr class='my-5 border-t-2 border-zinc-700/5 dark:border-zinc-200/5' />
    <ul class='text-base'>
      {
        data.posts.map(post => {
          const isDraft = post.status === 'draft'
          const isCurrent = post.isCurrent
          const title = isDraft ? `Planned: ${post.title}` : post.title

          return (
            <li
              class:list={[
                'relative my-3 pl-7 before:absolute before:left-1 before:top-[9px] before:h-1.5 before:w-1.5 before:rounded-full before:bg-zinc-800/10 dark:before:bg-zinc-100/10',
                {
                  'before:bg-zinc-300/90 before:ring-[3px] before:ring-purple-600/20 dark:before:ring-purple-400/20 before:ring-offset-1 before:ring-offset-black/10':
                    isCurrent,
                  'before:bg-zinc-900/30 dark:before:bg-zinc-100/30':
                    !isDraft && !isCurrent,
                  'before:bg-zinc-800/10 dark:before:bg-zinc-100/10': !isDraft
                }
              ]}
            >
              {!isDraft ? (
                post.isCurrent ? (
                  <span class='text-foreground'>{title}</span>
                ) : (
                  <a
                    href={`/blog/${post.slug}`}
                    class:list={[
                      'text-foreground/50 underline underline-offset-2 transition-all',
                      'decoration-zinc-800/30  hover:text-zinc-800 hover:decoration-zinc-700/50',
                      'dark:decoration-zinc-200/30 dark:hover:text-zinc-100 dark:hover:decoration-zinc-200/50',
                      'focus:outline-none focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-zinc-500/70'
                    ]}
                  >
                    {title}
                  </a>
                )
              ) : (
                // planned
                <span class='text-foreground/50'>{title}</span>
              )}
            </li>
          )
        })
      }
    </ul>
  </div>

  <script define:vars={{ isInteractive }}>
    let isOpen = !isInteractive

    const cardHeaders = document.querySelectorAll('[toggle-card]')
    const cardContents = document.querySelectorAll('[card-content]')
    const chevronDownIcons = document.querySelectorAll('[chevrondown-icon]')
    const chevronUpIcons = document.querySelectorAll('[chevronup-icon]')

    init()

    function init() {
      if (isInteractive) {
        // Add event listener to open the card
        cardHeaders.forEach(e => {
          e.addEventListener('click', toggleCard)
          e.classList.add('cursor-pointer')
        })

        chevronUpIcons.forEach(e => e.classList.remove('hidden'))
      } else {
        cardContents.forEach(e => e.classList.remove('hidden'))
      }
    }

    function toggleCard() {
      if (cardContents == null) return

      if (!isOpen) {
        cardContents.forEach(e => e.classList.add('hidden'))
        chevronDownIcons.forEach(e => e.classList.remove('hidden'))
        chevronUpIcons.forEach(e => e.classList.add('hidden'))
      } else {
        cardContents.forEach(e => e.classList.remove('hidden'))
        chevronDownIcons.forEach(e => e.classList.add('hidden'))
        chevronUpIcons.forEach(e => e.classList.remove('hidden'))
      }
      isOpen = !isOpen
    }
  </script>
</div>
