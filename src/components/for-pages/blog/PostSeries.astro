---
import Icons from '@/components/icons/Icons.astro'
import type { PostSerie } from '@/content/post-serie.type'

interface Props {
  data: PostSerie
  isInteractive: boolean | undefined
}

const { data, isInteractive } = Astro.props

console.log('data', data)

const title = data.title
const currentPost = data.posts.find(post => post.isCurrent)
const length = data.posts.length
const currentIndex = currentPost!.order
---

<div
  class='rounded-2xl bg-white/5 p-5 shadow-surface-elevation-low lg:px-8 lg:py-7'
>
  <div toggle-card class='group flex w-full items-center text-left'>
    <div>
      <div class='text-sm uppercase text-rose-100/50'>Series</div>
      <div class='text-lg font-medium sm:text-xl'>
        {title}
        <span class='font-normal text-rose-100/50'>
          &middot; {currentIndex} of {length}</span
        >
      </div>
    </div>
    <div
      class:list={[
        'ml-auto pl-4',
        {
          hidden: !isInteractive
        }
      ]}
    >
      <div
        class='rounded-full dark:bg-zinc-700 p-2 dark:group-hover:bg-rose-100/25'
      >
        <Icons kind='chevronDown' class='hidden h-5 w-5' />
        <Icons kind='chevronUp' class='hidden h-5 w-5' />
      </div>
    </div>
  </div>

  <div card-content class='hidden'>
    <hr class='my-5 border-t-2 border-rose-200/5' />
    <ul class='text-base'>
      {
        data.posts.map(post => {
          const isDraft = post.status === 'draft'
          const isCurrent = post.isCurrent
          const title = isDraft ? `Planned: ${post.title}` : post.title

          return (
            <li
              class:list={[
                'relative my-3 pl-7 before:absolute before:left-1 before:top-[9px] before:h-1.5 before:w-1.5 before:rounded-full before:bg-rose-100/10',
                {
                  'before:bg-rose-300/90 before:ring-[3px] before:ring-purple-400/20 before:ring-offset-1 before:ring-offset-black/10':
                    isCurrent,
                  'before:bg-rose-100/30': !isDraft && !isCurrent,
                  'before:bg-rose-100/10': !isDraft
                }
              ]}
            >
              {!isDraft ? (
                post.isCurrent ? (
                  <span class='text-rose-50/90'>{title}</span>
                ) : (
                  <a
                    href={`/blog/${post.slug}`}
                    class:list={[
                      'text-rose-100/90 underline decoration-rose-200/30 underline-offset-2 transition-all hover:text-rose-100 hover:decoration-rose-200/50',
                      'focus:outline-none focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-rose-500/70'
                    ]}
                  >
                    {title}
                  </a>
                )
              ) : (
                <span class='text-rose-100/50'>{title}</span>
              )}
            </li>
          )
        })
      }
    </ul>
  </div>

  <script define:vars={{ isInteractive }}>
    let isOpen = !isInteractive

    const cardHeader = document.querySelector('[toggle-card]')
    const cardContent = document.querySelector('[card-content]')
    const chevronDownIcon = document.querySelector('[chevrondown-icon]')
    const chevronUpIcon = document.querySelector('[chevronup-icon]')

    init()

    function init() {
      if (isInteractive) {
        // Add event listener to open the card
        cardHeader.addEventListener('click', toggleCard)
        cardHeader.classList.add('cursor-pointer')
        chevronDownIcon.classList.remove('hidden')
      } else {
        cardContent.classList.remove('hidden')
      }
    }

    function toggleCard() {
      if (cardContent == null) return
      console.log('toggleCard')

      if (isOpen) {
        cardContent.classList.add('hidden')
        chevronUpIcon.classList.add('hidden')
        chevronDownIcon.classList.remove('hidden')
      } else {
        cardContent.classList.remove('hidden')
        chevronUpIcon.classList.remove('hidden')
        chevronDownIcon.classList.add('hidden')
      }
      isOpen = !isOpen
    }
  </script>
</div>
