---
import type { Post } from '@/lib/types/post.type'

import PageLayout from '@/layouts/PageLayout.astro'
import Link from '@/components/Link.astro'

import { getPostsData } from '@/lib/data/blog-provider'
import PostsListView from '@/components/for-pages/blog/PostsListView.astro'
import BaseCard from '@/components/BaseCard.astro'

export async function getStaticPaths() {
  const posts = await getPostsData()

  const tags = new Map<string, number>()

  posts.forEach(post => {
    const postTags = post.tags
    postTags?.forEach(tag => {
      tags.set(tag, (tags.get(tag) || 0) + 1)
    })
  })

  const keys = Array.from(tags.keys())

  return keys.map(tag => {
    return {
      params: { tag: tag },
      props: {
        tag: tag,
        tags: tags,
        posts: posts.filter(post => post.tags?.includes(tag))
      }
    }
  })
}

interface Props {
  posts: Post[]
  tag: string
  tags: Map<string, number>
}

const { tag, tags, posts } = Astro.props

function isSamePath(path: string) {
  return Astro.url.pathname === path
}
---

<PageLayout>
  {
    tag ? (
      <div>
        <div class='pb-6 pt-6'>
          <h1 class='text-3xl capitalize font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl sm:leading-10 md:text-6xl md:leading-14'>
            {tag}
          </h1>
        </div>
        <div class='flex sm:space-x-4'>
          <BaseCard styles='min-w-[280px] max-w-[280px]'>
            <div class='py-4 px-6'>
              <h3 class='text-primary-500 font-bold uppercase'>All Posts</h3>

              <ul>
                {Array.from(tags.entries()).map(key => {
                  const tag = key[0]
                  const count = key[1]
                  return (
                    <Fragment>
                      <li class='my-3'>
                        {isSamePath(`/blog/tag/${tag}`) ? (
                          <Fragment>
                            <h3 class='inline py-2 px-3 uppercase text-sm font-bold text-primary-500 underline'>
                              {`${tag} (${count})`}
                            </h3>
                          </Fragment>
                        ) : (
                          <Fragment>
                            <Link
                              href={`/blog/tag/${tag}`}
                              class='py-2 px-3 uppercase text-sm font-medium text-gray-500 dark:text-gray-300 hover:text-primary-500 dark:hover:text-primary-500'
                              {...{ 'aria-label': `View posts tagged ${tag}` }}
                            >
                              {`${tag} (${count})`}
                            </Link>
                          </Fragment>
                        )}
                      </li>
                    </Fragment>
                  )
                })}
              </ul>
            </div>
          </BaseCard>
          <div>
            <PostsListView posts={posts} visible={true} />
          </div>
        </div>
      </div>
    ) : (
      <p>No tags found.</p>
    )
  }
</PageLayout>
